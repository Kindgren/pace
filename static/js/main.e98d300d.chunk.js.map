{"version":3,"sources":["pages/HomePage.jsx","App.js","reportWebVitals.js","index.js"],"names":["RunningCalculator","_useState","useState","_useState2","_slicedToArray","distance","setDistance","_useState3","_useState4","pace","setPace","_useState5","_useState6","time","setTime","formatTime","timeInSeconds","hours","Math","floor","minutes","seconds","concat","toString","padStart","handleDistanceChange","event","newDistance","parseInt","target","value","handlePaceChange","newPace","handleTimeChange","newTime","round","React","createElement","className","type","min","max","onChange","onMouseUp","App","Router","Routes","Route","path","element","HomePage","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"6PAgEeA,SA7DW,WAAM,IAAAC,EACIC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAAAI,EACJL,mBAAS,KAAOM,EAAAJ,YAAAG,EAAA,GAAjCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAAsBG,EAClBT,mBAASG,EAAWI,GAAKG,EAAAR,YAAAO,EAAA,GAA1CE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAEdG,EAAa,SAACC,GAChB,IAAMC,EAAQC,KAAKC,MAAMH,EAAgB,MACnCI,EAAUF,KAAKC,OAAOH,EAAyB,KAARC,GAAiB,IACxDI,EAAUL,EAAgB,GAChC,SAAAM,OAAUL,EAAK,KAAAK,OAAIF,EAAQG,WAAWC,SAAS,EAAG,KAAI,KAAAF,OAAID,EAAQE,WAAWC,SAAS,EAAG,OAIvFC,EAAuB,SAACC,GAC1B,IAAMC,EAAcC,SAASF,EAAMG,OAAOC,OAC1CxB,EAAYqB,GACZb,EAAQa,EAAclB,IAGpBsB,EAAmB,SAACL,GACtB,IAAMM,EAAUJ,SAASF,EAAMG,OAAOC,OACtCpB,EAAQsB,GACRlB,EAAQT,EAAW2B,IAGjBC,EAAmB,SAACP,GACtB,IAAMQ,EAAUN,SAASF,EAAMG,OAAOC,OACtChB,EAAQoB,GACRxB,EAAQQ,KAAKiB,MAAMD,EAAU7B,KAIjC,OACI+B,IAAAC,cAAA,OAAKC,UAAU,aACXF,IAAAC,cAAA,OAAKC,UAAU,oBACXF,IAAAC,cAAA,aAAO,YAEHD,IAAAC,cAAA,SAAOE,KAAK,QAAQC,IAAI,IAAIC,IAAI,KAAKX,MAAOzB,EAAUqC,SAAUjB,EAAsBkB,UAAWlB,KAErGW,IAAAC,cAAA,OAAKC,UAAU,gBAAgBjC,EAAS,QAG5C+B,IAAAC,cAAA,OAAKC,UAAU,oBACXF,IAAAC,cAAA,aAAO,QAEHD,IAAAC,cAAA,SAAOE,KAAK,QAAQC,IAAI,KAAKC,IAAI,MAAMX,MAAOrB,EAAMiC,SAAUX,EAAkBY,UAAWZ,KAE/FK,IAAAC,cAAA,OAAKC,UAAU,gBAAgBvB,EAAWN,GAAM,cAGpD2B,IAAAC,cAAA,OAAKC,UAAU,oBACXF,IAAAC,cAAA,aAAO,QAEHD,IAAAC,cAAA,SAAOE,KAAK,QAAQC,IAAI,IAAIC,IAAI,QAAQX,MAAOjB,EAAM6B,SAAUT,EAAkBU,UAAWV,KAEhGG,IAAAC,cAAA,OAAKC,UAAU,gBAAgBvB,EAAWF,uBCzC3C+B,EAZH,WACV,OACER,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAACQ,IAAM,KACLT,IAAAC,cAACS,IAAM,KACLV,IAAAC,cAACU,IAAK,CAACC,KAAK,IAAIC,QAASb,IAAAC,cAACa,EAAQ,YCE7BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHhC,IAAAC,cAACD,IAAMiC,WAAU,KACfjC,IAAAC,cAACO,EAAG,QAORO","file":"static/js/main.e98d300d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './HomePage.css';\n\nconst RunningCalculator = () => {\n    const [distance, setDistance] = useState(10);\n    const [pace, setPace] = useState(5 * 60); // pace is in seconds per kilometer\n    const [time, setTime] = useState(distance * pace); \n\n    const formatTime = (timeInSeconds) => {\n        const hours = Math.floor(timeInSeconds / 3600);\n        const minutes = Math.floor((timeInSeconds - (hours * 3600)) / 60);\n        const seconds = timeInSeconds % 60;\n        return `${hours}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n    };\n    \n\n    const handleDistanceChange = (event) => {\n        const newDistance = parseInt(event.target.value);\n        setDistance(newDistance);\n        setTime(newDistance * pace);\n    };\n    \n    const handlePaceChange = (event) => {\n        const newPace = parseInt(event.target.value);\n        setPace(newPace);\n        setTime(distance * newPace);\n    };\n    \n    const handleTimeChange = (event) => {\n        const newTime = parseInt(event.target.value);\n        setTime(newTime);\n        setPace(Math.round(newTime / distance));\n    };\n    \n\n    return (\n        <div className=\"container\">\n            <div className=\"slider-container\">\n                <label>\n                    Distance:\n                    <input type=\"range\" min=\"1\" max=\"50\" value={distance} onChange={handleDistanceChange} onMouseUp={handleDistanceChange} />\n                </label>\n                <div className=\"slider-value\">{distance} km</div> \n            </div>\n\n            <div className=\"slider-container\">\n                <label>\n                    Pace:\n                    <input type=\"range\" min=\"60\" max=\"600\" value={pace} onChange={handlePaceChange} onMouseUp={handlePaceChange} />\n                </label>\n                <div className=\"slider-value\">{formatTime(pace)} min / km</div> \n            </div>\n\n            <div className=\"slider-container\">\n                <label>\n                    Time:\n                    <input type=\"range\" min=\"1\" max=\"18000\" value={time} onChange={handleTimeChange} onMouseUp={handleTimeChange} />\n                </label>\n                <div className=\"slider-value\">{formatTime(time)}</div>\n            </div>\n        </div>\n    );\n};\n\nexport default RunningCalculator;\n","import React from 'react';\nimport './App.css';\nimport HomePage from './pages/HomePage';\nimport { HashRouter as Router, Route, Routes } from 'react-router-dom';\n\nconst App = () => {\n  return (\n    <div className=\"Pace-calculator\">\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}